#!/bin/bash

# Startup project docker compose services from vailable docker compose yaml files.
if [[ ${args[--force]} == '1' ]] || confirm "Are rendered files to your liking? [y|Y]";
then
    run_hook "before_up"
    
    cyan "Checking docker images."

    for dockerfile in $(find ".nightwind/rendered/dockerfiles" -type f -name '*.Dockerfile'); 
    do
        target="${dockerfile##*dockerfiles/}" 
        target=${target%.Dockerfile*}
        if [[ "$(docker images -q $tag_prefix/$target 2>/dev/null)" == "" ]]; then
            yellow "WARNING: Docker image $tag_prefix/$target doesnt exist, building."
            declare -A empty_args=() # required by the build_project_images helper
            build_project_images "$tag_prefix" "$target" empty_args
        fi
    done

    cyan "Checking available compose files."

    yaml_file_arg="-f .nightwind/rendered/compose/app.yaml"
    env_yaml_file=".nightwind/rendered/compose/$APP_ENV.env.yaml"

    if [ -f "$env_yaml_file" ]; then
        path="${env_yaml_file##*.nightwind/}" 
        yaml_file_arg="${yaml_file_arg} -f $env_yaml_file"
    fi


    for yaml in $(find ".nightwind/rendered/compose" -type f -name '*.yaml' ! -name app.yaml ! -name $APP_ENV.env.yaml ! -name *.env.yaml); 
    do
        path="${yaml##*.nightwind/}" 
        path=".nightwind/$path"
        yaml_file_arg="${yaml_file_arg} -f $path"
        target="${path%%.*}"
    done


    cyan "Starting services."

    docker compose $yaml_file_arg up -d $other_args

    # run hook if successful.
    if [ $? -eq 0 ]; then
        run_hook "after_up"
    fi
    

    lightgreen "Started services!"
fi

