#!/usr/bin/env php
<?php

/**
 * ---------------------------------------------------------------------------------------------------
 * This script is part of the nightwind-cli, it is used internally by the `nightwind render` command
 * for generating your `.nightwind/template` rendered files. Changing this file is not recommended
 * unless you have some custom needs not met by the cli natively.
 * ---------------------------------------------------------------------------------------------------
 */
require_once 'vendor/autoload.php';

use Dotenv\Dotenv;
use Nightwind\ViewFinder;
use Nightwind\ViewFactory;
use Illuminate\Support\Str;
use Nightwind\CompilerEngine;
use Illuminate\Events\Dispatcher;
use Illuminate\Container\Container;
use Symfony\Component\Finder\Finder;
use Illuminate\Filesystem\Filesystem;
use Illuminate\View\Engines\EngineResolver;
use Illuminate\View\Compilers\BladeCompiler;

/**
 * ---------------------------------------------------------------------------------------------------
 * Dependencies
 * ---------------------------------------------------------------------------------------------------
 */
define('PATH_TO_COMPILED',  __DIR__ .'/compiled');
define('PATH_TO_VIEWS', '/app/.nightwind/templates');

$container = new Container;
$filesystem = new Filesystem;
$eventDispatcher = new Dispatcher($container);

$engineResolver = new EngineResolver;
$compiler = new BladeCompiler($filesystem, PATH_TO_COMPILED);

$engineResolver->register('blade', function () use ($compiler) {
    return new CompilerEngine($compiler);
});

$viewFinder = new ViewFinder($filesystem, [PATH_TO_VIEWS]);
$view = new ViewFactory($engineResolver, $viewFinder, $eventDispatcher);
$view->addExtension('blade', 'blade');

/**
 * ---------------------------------------------------------------------------------------------------
 * Render Templates
 * ---------------------------------------------------------------------------------------------------
 */
//get template data
$projectNightwindPath =  '/app/.nightwind';
$env = Dotenv::parse(file_get_contents('/app/.env'));
$variables = yaml_parse(file_get_contents("$projectNightwindPath/variables.yaml"));
$variables = array_merge($variables, $env);
// generate the template results

foreach ((new Finder())->in("$projectNightwindPath/templates")->name('*.blade')->files() as $file) {
    $viewRelativePath = str_replace(".blade", "", Str::after($templatePath = $file->getRealPath(), "templates/"));
    $template = $view->make($viewRelativePath, $variables);

    $contents = $template->render();

    $destination = "/app/.nightwind/rendered/".str_replace(['/templates/'], ['/rendered/'], $viewRelativePath);
    // ensure parent directory exists.
    @mkdir(dirname($destination), recursive: true);
    
    file_put_contents($destination, $contents);

    if(str_contains($templatePath, '/app/.nightwind/templates/hooks/')){
        chmod($destination, 0770);
    }
    
    // location relavent to end user/host machine.
    $hostLocation = str_replace('/app/', '', $destination);
    echo "Rendered $hostLocation \n";
}

// cleanup compiled when done.
$filesystem->deleteDirectory(PATH_TO_COMPILED, preserve: true);
